service: members-search-api

frameworkVersion: ">=2.62.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline
#  - serverless-build-plugin
  # - serverless-esbuild
  - serverless-bundle

package:
  individually: true

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
  serverless-offline:
    babelOptions:
      presets: ['es2015', 'stage-0']
  bundle:
    sourcemaps: true
    packager: yarn
    copyFiles: 
      - from: '.env'
        to: './'
    # forceInclude:
    #   - dotenv
    #   - node-fetch
    #   - xml2js
    #   - csv-parse
    #   - serverless-dynamodb-client
    #   - lodash
    #   - camelcase-keys
    #   - graphql
    #   - fs
    #   - path
    #   - moment
    #   - graphql-tools
provider:
  name: aws
  lambdaHashingVersion: 20201221
  runtime: nodejs14.x
  region: us-west-2
  stage: development
  environment:
    DYNAMODB_MEMBERS_TABLE: members-search-api-${opt:stage, self:provider.stage}-members
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:BatchWriteItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_MEMBERS_TABLE}"

functions:
  export:
    handler: export/handler.handler
    package:
      # We're including this file so it will be in the final package of this function only
      patterns:
        - utils.js
    events:
      - schedule:
          rate: cron(0 8 * * ? *) # 1am PST
          enabled: true
      - http: post /export
    timeout: 60
  graphql:
    handler: graphql/handler.handler
    events:
      - http:
          method: post
          path: graphql
          cors: true

resources:
  Resources:
    MembersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_MEMBERS_TABLE}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
